"""refactor_service_category_many_to_many

Revision ID: f17f04027172
Revises: 929e4d8a7b6f
Create Date: 2025-10-03 17:46:28.195810

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "f17f04027172"
down_revision: Union[str, Sequence[str], None] = "929e4d8a7b6f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "service_category_link",
        sa.Column("service_id", sa.Uuid(), nullable=False),
        sa.Column("category_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("service_id", "category_id"),
    )
    op.drop_constraint(op.f("service_category_id_fkey"), "service", type_="foreignkey")
    op.drop_column("service", "category_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "service",
        sa.Column("category_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        op.f("service_category_id_fkey"), "service", "category", ["category_id"], ["id"]
    )
    op.drop_table("service_category_link")
    # ### end Alembic commands ###
