"""Create full
     catalog module tables

Revision ID: 0d068d7a9aee
Revises: 0b0b11d8da6d
Create Date: 2025-10-18 14:52:13.177924

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "0d068d7a9aee"
down_revision: Union[str, Sequence[str], None] = "0b0b11d8da6d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "packagecategory",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_packagecategory_name"), "packagecategory", ["name"], unique=False
    )
    op.create_table(
        "servicecategory",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_servicecategory_name"), "servicecategory", ["name"], unique=False
    )
    op.create_table(
        "service",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("duration_minutes", sa.Integer(), nullable=False),
        sa.Column("buffer_time_after", sa.Integer(), nullable=False),
        sa.Column("is_bookable_online", sa.Boolean(), nullable=False),
        sa.Column("color_code", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("required_resources", sa.JSON(), nullable=True),
        sa.Column("required_staff_skills", sa.JSON(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("primary_image_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["servicecategory.id"],
        ),
        sa.ForeignKeyConstraint(
            ["primary_image_id"],
            ["mediafile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_service_name"), "service", ["name"], unique=False)
    op.create_table(
        "servicepackage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("total_price", sa.Float(), nullable=False),
        sa.Column("validity_period_days", sa.Integer(), nullable=False),
        sa.Column(
            "terms_and_conditions", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("primary_image_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["packagecategory.id"],
        ),
        sa.ForeignKeyConstraint(
            ["primary_image_id"],
            ["mediafile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_servicepackage_name"), "servicepackage", ["name"], unique=False
    )
    op.create_table(
        "packageservicelink",
        sa.Column("package_id", sa.Integer(), nullable=False),
        sa.Column("service_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["package_id"],
            ["servicepackage.id"],
        ),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("package_id", "service_id"),
    )
    op.create_table(
        "serviceproductconsumption",
        sa.Column("service_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("consumed_quantity", sa.Float(), nullable=False),
        sa.Column("unit", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("service_id", "product_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("serviceproductconsumption")
    op.drop_table("packageservicelink")
    op.drop_index(op.f("ix_servicepackage_name"), table_name="servicepackage")
    op.drop_table("servicepackage")
    op.drop_index(op.f("ix_service_name"), table_name="service")
    op.drop_table("service")
    op.drop_index(op.f("ix_servicecategory_name"), table_name="servicecategory")
    op.drop_table("servicecategory")
    op.drop_index(op.f("ix_packagecategory_name"), table_name="packagecategory")
    op.drop_table("packagecategory")
    # ### end Alembic commands ###
