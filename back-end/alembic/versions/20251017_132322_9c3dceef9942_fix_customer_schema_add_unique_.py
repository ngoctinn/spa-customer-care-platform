"""Fix customer schema: add unique constraint, change date_of_birth type

Revision ID: 9c3dceef9942
Revises: 3c8d9a2b5f1e
Create Date: 2025-10-17 13:23:22.256221

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlmodel import SQLModel

# revision identifiers, used by Alembic.
revision: str = "9c3dceef9942"
down_revision: Union[str, Sequence[str], None] = "3c8d9a2b5f1e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # op.drop_index(op.f("ix_customer_deleted_at"), table_name="customer")
    # op.drop_index(op.f("ix_customer_phone_number"), table_name="customer")
    # op.drop_index(op.f("ix_customer_user_id"), table_name="customer")
    # op.drop_table("customer")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "customer",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "full_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "phone_number", sa.VARCHAR(length=20), autoincrement=False, nullable=True
        ),
        sa.Column(
            "date_of_birth", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("gender", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.Column("address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "skin_type", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("health_conditions", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "is_active",
            sa.BOOLEAN(),
            server_default=sa.text("true"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("customer_user_id_fkey"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("customer_pkey")),
    )
    op.create_index(op.f("ix_customer_user_id"), "customer", ["user_id"], unique=False)
    op.create_index(
        op.f("ix_customer_phone_number"), "customer", ["phone_number"], unique=False
    )
    op.create_index(
        op.f("ix_customer_deleted_at"), "customer", ["deleted_at"], unique=False
    )
    # ### end Alembic commands ###
