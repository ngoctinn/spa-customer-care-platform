"""Module x·ª≠ l√Ω g·ª≠i email cho h·ªá th·ªëng.

Ch·ª©a c√°c h√†m ƒë·ªÉ g·ª≠i email x√°c minh ƒëƒÉng k√Ω v√† ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.
"""

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from typing import Optional

from src.core.config import settings


def _get_verification_email_template(
    user_email: str, token: str, frontend_url: str
) -> str:
    """T·∫°o HTML template cho email x√°c minh ƒëƒÉng k√Ω.

    Args:
        user_email: Email ng∆∞·ªùi d√πng
        token: Token x√°c minh
        frontend_url: URL frontend ƒë·ªÉ t·∫°o link x√°c minh

    Returns:
        HTML content c·ªßa email
    """
    verify_link = f"{frontend_url}/auth/verify-email?token={token}"
    html_content = f"""
    <html>
        <head>
            <meta charset="UTF-8">
            <style>
                body {{
                    font-family: Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                }}
                .container {{
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                    background-color: #f5f5f5;
                }}
                .content {{
                    background-color: #ffffff;
                    padding: 30px;
                    border-radius: 8px;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                }}
                .header {{
                    text-align: center;
                    margin-bottom: 20px;
                }}
                .header h2 {{
                    color: #2c3e50;
                    margin: 0;
                }}
                .button {{
                    display: inline-block;
                    background-color: #3498db;
                    color: #ffffff;
                    padding: 12px 30px;
                    border-radius: 5px;
                    text-decoration: none;
                    margin: 20px 0;
                    font-weight: bold;
                }}
                .footer {{
                    text-align: center;
                    margin-top: 30px;
                    padding-top: 20px;
                    border-top: 1px solid #ddd;
                    font-size: 12px;
                    color: #7f8c8d;
                }}
                .expiry-notice {{
                    background-color: #fff3cd;
                    border-left: 4px solid #ffc107;
                    padding: 10px;
                    margin: 15px 0;
                    border-radius: 3px;
                    font-size: 14px;
                }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="content">
                    <div class="header">
                        <h2>X√°c minh Email c·ªßa B·∫°n</h2>
                    </div>

                    <p>Xin ch√†o,</p>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n v·ªõi ch√∫ng t√¥i.
                    ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng x√°c minh
                    ƒë·ªãa ch·ªâ email c·ªßa b·∫°n b·∫±ng c√°ch nh·∫•p v√†o n√∫t d∆∞·ªõi ƒë√¢y:</p>

                    <center>
                        <a href="{verify_link}" class="button">X√°c minh Email</a>
                    </center>

                    <div class="expiry-notice">
                        <strong>‚è±Ô∏è L∆∞u √Ω:</strong> Link x√°c minh s·∫Ω h·∫øt h·∫°n
                        sau 24 gi·ªù. N·∫øu b·∫°n kh√¥ng x√°c minh trong th·ªùi gian n√†y,
                        vui l√≤ng y√™u c·∫ßu g·ª≠i l·∫°i email.
                    </div>

                    <p>Ho·∫∑c sao ch√©p link d∆∞·ªõi ƒë√¢y v√†o tr√¨nh duy·ªát:</p>
                    <p style="word-break: break-all; background-color: #f9f9f9;
                    padding: 10px; border-radius: 3px; font-size: 12px;">
                        {verify_link}
                    </p>

                    <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω, vui l√≤ng b·ªè qua email n√†y.</p>

                    <div class="footer">
                        <p>¬© 2025 Spa Online CRM. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                        <p>N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá:
                        <a href="mailto:support@spa-crm.local">support@spa-crm.local</a></p>
                    </div>
                </div>
            </div>
        </body>
    </html>
    """
    return html_content


def _get_password_reset_email_template(
    token: str, frontend_url: str
) -> str:
    """T·∫°o HTML template cho email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.

    Args:
        token: Token ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
        frontend_url: URL frontend ƒë·ªÉ t·∫°o link reset

    Returns:
        HTML content c·ªßa email
    """
    reset_link = f"{frontend_url}/auth/reset-password?token={token}"
    html_content = f"""
    <html>
        <head>
            <meta charset="UTF-8">
            <style>
                body {{
                    font-family: Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                }}
                .container {{
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                    background-color: #f5f5f5;
                }}
                .content {{
                    background-color: #ffffff;
                    padding: 30px;
                    border-radius: 8px;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                }}
                .header {{
                    text-align: center;
                    margin-bottom: 20px;
                }}
                .header h2 {{
                    color: #e74c3c;
                    margin: 0;
                }}
                .button {{
                    display: inline-block;
                    background-color: #e74c3c;
                    color: #ffffff;
                    padding: 12px 30px;
                    border-radius: 5px;
                    text-decoration: none;
                    margin: 20px 0;
                    font-weight: bold;
                }}
                .footer {{
                    text-align: center;
                    margin-top: 30px;
                    padding-top: 20px;
                    border-top: 1px solid #ddd;
                    font-size: 12px;
                    color: #7f8c8d;
                }}
                .security-notice {{
                    background-color: #f8d7da;
                    border-left: 4px solid #f5c6cb;
                    padding: 10px;
                    margin: 15px 0;
                    border-radius: 3px;
                    font-size: 14px;
                    color: #721c24;
                }}
                .expiry-notice {{
                    background-color: #fff3cd;
                    border-left: 4px solid #ffc107;
                    padding: 10px;
                    margin: 15px 0;
                    border-radius: 3px;
                    font-size: 14px;
                }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="content">
                    <div class="header">
                        <h2>ƒê·∫∑t l·∫°i M·∫≠t kh·∫©u c·ªßa B·∫°n</h2>
                    </div>

                    <p>Xin ch√†o,</p>
                    <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho
                    t√†i kho·∫£n c·ªßa b·∫°n. ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng
                    nh·∫•p v√†o n√∫t d∆∞·ªõi ƒë√¢y:</p>

                    <center>
                        <a href="{reset_link}" class="button">ƒê·∫∑t l·∫°i M·∫≠t kh·∫©u</a>
                    </center>

                    <div class="expiry-notice">
                        <strong>‚è±Ô∏è L∆∞u √Ω:</strong> Link ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
                        s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù. Vui l√≤ng th·ª±c hi·ªán thay ƒë·ªïi
                        trong th·ªùi gian n√†y.
                    </div>

                    <p>Ho·∫∑c sao ch√©p link d∆∞·ªõi ƒë√¢y v√†o tr√¨nh duy·ªát:</p>
                    <p style="word-break: break-all; background-color: #f9f9f9;
                    padding: 10px; border-radius: 3px; font-size: 12px;">
                        {reset_link}
                    </p>

                    <div class="security-notice">
                        <strong>üîí C·∫£nh b√°o b·∫£o m·∫≠t:</strong> N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu
                        ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y ho·∫∑c thay ƒë·ªïi
                        m·∫≠t kh·∫©u ngay ƒë·ªÉ b·∫£o v·ªá t√†i kho·∫£n c·ªßa b·∫°n.
                    </div>

                    <div class="footer">
                        <p>¬© 2025 Spa Online CRM. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                        <p>N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ b·∫£o m·∫≠t, vui l√≤ng li√™n h·ªá:
                        <a href="mailto:security@spa-crm.local">security@spa-crm.local</a></p>
                    </div>
                </div>
            </div>
        </body>
    </html>
    """
    return html_content


def send_email_async(to_email: str, subject: str, html_content: str) -> bool:
    """G·ª≠i email kh√¥ng ƒë·ªìng b·ªô th√¥ng qua SMTP.

    Args:
        to_email: Email ng∆∞·ªùi nh·∫≠n
        subject: Ti√™u ƒë·ªÅ email
        html_content: N·ªôi dung HTML c·ªßa email

    Returns:
        True n·∫øu g·ª≠i th√†nh c√¥ng, False n·∫øu th·∫•t b·∫°i
    """
    try:
        # T·∫°o message MIME
        message = MIMEMultipart("alternative")
        message["From"] = f"{settings.MAIL_USERNAME}"
        message["To"] = to_email
        message["Subject"] = subject

        # G·∫Øn HTML content
        part = MIMEText(html_content, "html")
        message.attach(part)

        # K·∫øt n·ªëi SMTP v√† g·ª≠i
        if settings.MAIL_SSL_TLS:
            server = smtplib.SMTP_SSL(settings.MAIL_SERVER, settings.MAIL_PORT)
        else:
            server = smtplib.SMTP(settings.MAIL_SERVER, settings.MAIL_PORT)
            if settings.MAIL_STARTTLS:
                server.starttls()

        server.login(settings.MAIL_USERNAME, settings.MAIL_PASSWORD)
        server.send_message(message)
        server.quit()

        return True
    except Exception as e:
        # Log l·ªói nh∆∞ng kh√¥ng expose chi ti·∫øt l·ªói SMTP
        print(f"L·ªói g·ª≠i email: {str(e)}")
        return False


def send_verification_email(email: str, token: str) -> bool:
    """G·ª≠i email x√°c minh ƒëƒÉng k√Ω.

    Args:
        email: Email ng∆∞·ªùi d√πng c·∫ßn x√°c minh
        token: Token x√°c minh ƒë·ªÉ t·∫°o link

    Returns:
        True n·∫øu g·ª≠i th√†nh c√¥ng, False n·∫øu th·∫•t b·∫°i
    """
    subject = "X√°c minh Email c·ªßa B·∫°n - Spa Online CRM"
    html_content = _get_verification_email_template(
        email, token, settings.FRONTEND_URL
    )
    return send_email_async(email, subject, html_content)


def send_password_reset_email(email: str, token: str) -> bool:
    """G·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.

    Args:
        email: Email ng∆∞·ªùi d√πng c·∫ßn reset m·∫≠t kh·∫©u
        token: Token ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë·ªÉ t·∫°o link

    Returns:
        True n·∫øu g·ª≠i th√†nh c√¥ng, False n·∫øu th·∫•t b·∫°i
    """
    subject = "ƒê·∫∑t l·∫°i M·∫≠t kh·∫©u - Spa Online CRM"
    html_content = _get_password_reset_email_template(token, settings.FRONTEND_URL)
    return send_email_async(email, subject, html_content)
